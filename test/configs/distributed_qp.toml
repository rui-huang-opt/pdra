run_type = "plot"  # "test", "plot"
algorithm = "core" # "core", "dual_decomp", "rsdd"

n_vars = 2
n_cons = 2
node_names = ["1", "2", "3", "4", "5"]
edge_pairs = [["1", "2"], ["2", "3"], ["3", "4"], ["4", "5"], ["5", "1"]]
optimal_value = -9.474506786840472

model_data.b = [4.847923138822793, 3.8756641168055728]

[model_data.Q]
1 = [ #fmt: skip
    [2.875534271125623, 0.06144343163412097],
    [0.06144343163412097, 2.254218742165002],
]
2 = [ #fmt: skip
    [3.8026179850740753, -1.1782113709237287],
    [-1.1782113709237287, 2.7730675866708934],
]
3 = [ #fmt: skip
    [2.5699029862613805, 0.09971261279558088],
    [0.09971261279558088, 2.244252016241631],
]
4 = [ #fmt: skip
    [2.4804809929701177, -0.7786936710712302],
    [-0.7786936710712302, 3.562713369279426],
]
5 = [ #fmt: skip
    [2.5715134324613014, 0.6960365893732322],
    [0.6960365893732322, 3.537348963308837],
]

[model_data.c]
1 = [-4.219906797787817, -4.220027398318987]
2 = [-4.090875163964497, -4.082977450732831]
3 = [-2.71965007891482, -1.0741201930349318]
4 = [-0.1718398346272032, -0.9580132594176947]
5 = [-3.7061000919999154, -1.68738857823009]

[model_data.A]
1 = [ #fmt: skip
    [0.2904180608409973, 4.330880728874676],
    [3.005575058716044, 3.540362888980227],
]
2 = [ #fmt: skip
    [1.5212112147976886, 2.6237821581611893],
    [2.1597250932105787, 1.4561457009902097],
]
3 = [ #fmt: skip
    [0.9983689107917987, 2.571172192068058],
    [2.9620728443102124, 0.23225206359998862],
]
4 = [ #fmt: skip
    [1.5230688458668533, 0.48836057003191935],
    [3.4211651325607844, 2.2007624686980067],
]
5 = [ #fmt: skip
    [1.5585553804470549, 2.600340105889054],
    [2.7335513967163982, 0.9242722776276352],
]

[model_data.x_star]
1 = [0.7428848828643821, 0.20711660527002904]
2 = [0.956551143998665, 1.2323121623342344]
3 = [0.1744829966849477, 0.038526615739426916]
4 = [-1.1712014784326539, -0.4373279680176067]
5 = [0.5592063481616449, -0.03871538202479289]

[pos]
1 = [0, 0]
2 = [1, 0]
3 = [1, 1]
4 = [0, 1]
5 = [0.5, 0.5]

[node_params.core]
max_iter = 3000
step_size = 0.001
method = "AGM"
solver = "OSQP"
results_prefix = "results/distributed_qp/core"

[node_params.dual_decomp]
max_iter = 3000
step_size = 0.1
solver = "OSQP"
results_prefix = "results/distributed_qp/dual_decomp"
comm_weight = 0.5

[node_params.rsdd]
max_iter = 3000
step_size = 0.5
solver = "OSQP"
results_prefix = "results/distributed_qp/rsdd"
decay_rate = 0.9
penalty_factor = 1e3
